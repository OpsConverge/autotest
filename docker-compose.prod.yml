version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: autotest-postgres-prod
    environment:
      POSTGRES_DB: autotest_prod
      POSTGRES_USER: autotest_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - autotest-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U autotest_user -d autotest_prod"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: autotest-backend-prod
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://autotest_user:${POSTGRES_PASSWORD}@postgres:5432/autotest_prod
      JWT_SECRET: ${JWT_SECRET}
      PORT: 4000
      # Production environment specific settings
      PROD_BASE_URL: ${PROD_BASE_URL:-https://yourdomain.com}
      PROD_API_URL: ${PROD_API_URL:-https://yourdomain.com/api}
      PROD_TARGET_URL: ${PROD_TARGET_URL:-https://yourdomain.com}
      PROD_ADMIN_EMAIL: ${PROD_ADMIN_EMAIL:-admin@yourdomain.com}
      PROD_ADMIN_PASSWORD: ${PROD_ADMIN_PASSWORD}
      PROD_USER_EMAIL: ${PROD_USER_EMAIL:-user@yourdomain.com}
      PROD_USER_PASSWORD: ${PROD_USER_PASSWORD}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - autotest-network
    volumes:
      - ./backend/logs:/app/logs
    restart: unless-stopped

  # Frontend
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: autotest-frontend-prod
    environment:
      NODE_ENV: production
      VITE_API_URL: ${PROD_API_URL:-https://yourdomain.com/api}
    depends_on:
      - backend
    networks:
      - autotest-network
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: autotest-nginx-prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.prod.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - autotest-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  autotest-network:
    driver: bridge

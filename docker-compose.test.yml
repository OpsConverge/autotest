version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: autotest-postgres-test
    environment:
      POSTGRES_DB: autotest_test
      POSTGRES_USER: autotest_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-testpassword123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - autotest-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U autotest_user -d autotest_test"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: autotest-backend-test
    environment:
      NODE_ENV: test
      DATABASE_URL: postgresql://autotest_user:${POSTGRES_PASSWORD:-testpassword123}@postgres:5432/autotest_test
      JWT_SECRET: ${JWT_SECRET:-test-jwt-secret-key}
      PORT: 4000
      # Test environment specific settings
      TEST_BASE_URL: ${TEST_BASE_URL:-http://localhost:8081}
      TEST_API_URL: ${TEST_API_URL:-http://localhost:8081/api}
      TEST_TARGET_URL: ${TEST_TARGET_URL:-http://localhost:8081}
      TEST_ADMIN_EMAIL: ${TEST_ADMIN_EMAIL:-admin@test.yourdomain.com}
      TEST_ADMIN_PASSWORD: ${TEST_ADMIN_PASSWORD:-admin123}
      TEST_USER_EMAIL: ${TEST_USER_EMAIL:-user@test.yourdomain.com}
      TEST_USER_PASSWORD: ${TEST_USER_PASSWORD:-user123}
    ports:
      - "4000:4000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - autotest-network
    volumes:
      - ./backend/logs:/app/logs
    restart: unless-stopped

  # Frontend
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: autotest-frontend-test
    environment:
      NODE_ENV: test
      VITE_API_URL: http://localhost:4000/api
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - autotest-network
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: autotest-nginx-test
    ports:
      - "8081:80"  # Different port to avoid conflicts
    volumes:
      - ./nginx.test.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - backend
    networks:
      - autotest-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  autotest-network:
    driver: bridge


name: Integration Test Pipeline (Vitest + Supertest + TAP)

on:
  workflow_dispatch:
    inputs:
      run_vitest:
        description: 'Run Vitest integration tests'
        required: false
        default: true
        type: boolean
      run_supertest:
        description: 'Run Supertest integration tests'
        required: false
        default: true
        type: boolean
      run_tap:
        description: 'Run TAP integration tests'
        required: false
        default: true
        type: boolean
      run_coverage:
        description: 'Generate coverage reports'
        required: false
        default: true
        type: boolean
      backend_url:
        description: 'Backend URL for integration tests'
        required: false
        default: 'http://localhost:4000'
        type: string

jobs:
  setup-backend:
    name: Setup Test Backend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install backend dependencies
        run: |
          cd backend
          npm ci

      - name: Start backend server
        run: |
          cd backend
          npm start &
          sleep 10
          echo "Backend started at http://localhost:4000"

      - name: Wait for backend to be ready
        run: |
          for i in {1..30}; do
            if curl -f http://localhost:4000/health; then
              echo "Backend is ready"
              break
            fi
            echo "Waiting for backend... ($i/30)"
            sleep 2
          done

  integration-tests-vitest:
    name: Integration Tests (Vitest)
    runs-on: ubuntu-latest
    needs: setup-backend
    if: ${{ github.event.inputs.run_vitest == 'true' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run Vitest integration tests
        run: npm run test:integration
        env:
          TEST_API_URL: ${{ github.event.inputs.backend_url }}

      - name: Upload test results
        uses: actions/upload-artifact@v3
        with:
          name: vitest-integration-results
          path: ./coverage/vitest-results.json

  integration-tests-supertest:
    name: Integration Tests (Supertest)
    runs-on: ubuntu-latest
    needs: setup-backend
    if: ${{ github.event.inputs.run_supertest == 'true' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run Supertest integration tests
        run: npm run test:integration:supertest
        env:
          TEST_API_URL: ${{ github.event.inputs.backend_url }}

      - name: Upload test results
        uses: actions/upload-artifact@v3
        with:
          name: supertest-integration-results
          path: ./coverage/supertest-results.json

  integration-tests-tap:
    name: Integration Tests (TAP)
    runs-on: ubuntu-latest
    needs: setup-backend
    if: ${{ github.event.inputs.run_tap == 'true' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run TAP integration tests
        run: npm run test:integration:tap
        env:
          TEST_API_URL: ${{ github.event.inputs.backend_url }}

      - name: Upload test results
        uses: actions/upload-artifact@v3
        with:
          name: tap-integration-results
          path: ./coverage/tap-results.json



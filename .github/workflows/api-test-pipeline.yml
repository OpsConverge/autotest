name: API Test Pipeline (Supertest + Karate + REST Assured)

on:
  workflow_dispatch:
    inputs:
      run_supertest:
        description: 'Run Supertest API tests'
        required: false
        default: true
        type: boolean
      run_karate:
        description: 'Run Karate-style API tests'
        required: false
        default: true
        type: boolean
      run_restassured:
        description: 'Run REST Assured-style API tests'
        required: false
        default: true
        type: boolean
      backend_url:
        description: 'Backend URL for API tests'
        required: false
        default: 'http://localhost:4000'
        type: string

jobs:
  setup-backend:
    name: Setup Test Backend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install backend dependencies
        run: |
          cd backend
          npm ci

      - name: Start backend server
        run: |
          cd backend
          npm start &
          sleep 10
          echo "Backend started at http://localhost:4000"

      - name: Wait for backend to be ready
        run: |
          for i in {1..30}; do
            if curl -f http://localhost:4000/health; then
              echo "Backend is ready"
              break
            fi
            echo "Waiting for backend... ($i/30)"
            sleep 2
          done

  api-tests-supertest:
    name: API Tests (Supertest)
    runs-on: ubuntu-latest
    needs: setup-backend
    if: ${{ github.event.inputs.run_supertest == 'true' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run Supertest API tests
        run: npm run test:api:supertest
        env:
          TEST_API_URL: ${{ github.event.inputs.backend_url }}

      - name: Upload test results
        uses: actions/upload-artifact@v3
        with:
          name: supertest-api-results
          path: ./coverage/supertest-api-results.json

  api-tests-karate:
    name: API Tests (Karate-style)
    runs-on: ubuntu-latest
    needs: setup-backend
    if: ${{ github.event.inputs.run_karate == 'true' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run Karate-style API tests
        run: npm run test:api:karate
        env:
          TEST_API_URL: ${{ github.event.inputs.backend_url }}

      - name: Upload test results
        uses: actions/upload-artifact@v3
        with:
          name: karate-api-results
          path: ./coverage/karate-api-results.json

  api-tests-restassured:
    name: API Tests (REST Assured-style)
    runs-on: ubuntu-latest
    needs: setup-backend
    if: ${{ github.event.inputs.run_restassured == 'true' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run REST Assured-style API tests
        run: npm run test:api:restassured
        env:
          TEST_API_URL: ${{ github.event.inputs.backend_url }}

      - name: Upload test results
        uses: actions/upload-artifact@v3
        with:
          name: restassured-api-results
          path: ./coverage/restassured-api-results.json



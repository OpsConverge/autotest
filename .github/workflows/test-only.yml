name: Test Suite

on:
  push:
    branches: [ main, develop, feature/* ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch: # Manual trigger

env:
  NODE_VERSION: '18'

jobs:
  test:
    name: Run Test Suite
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run linting
        run: npm run lint
        
      - name: Run unit tests
        run: npm run test:run
        
      - name: Run tests with coverage
        run: npm run test:coverage
        
      - name: Check coverage thresholds
        run: |
          echo "Checking coverage thresholds..."
          if [ -f "coverage/coverage-summary.json" ]; then
            echo "Coverage report generated successfully"
          else
            echo "Coverage report not found"
            exit 1
          fi
          
      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
          
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: |
            coverage/
            test-results/
          retention-days: 7
          
      - name: Comment PR with test results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            let coverageSummary = 'No coverage data available';
            
            try {
              if (fs.existsSync('coverage/coverage-summary.json')) {
                const coverage = JSON.parse(fs.readFileSync('coverage/coverage-summary.json', 'utf8'));
                coverageSummary = `üìä **Test Coverage Summary:**
                - Statements: ${coverage.total.statements.pct}%
                - Branches: ${coverage.total.branches.pct}%
                - Functions: ${coverage.total.functions.pct}%
                - Lines: ${coverage.total.lines.pct}%`;
              }
            } catch (error) {
              console.log('Could not read coverage summary:', error.message);
            }
            
            const comment = `## üß™ Test Results
            
            ‚úÖ All tests passed successfully!
            
            ${coverageSummary}
            
            üìÅ **Artifacts:** Test results and coverage reports are available as workflow artifacts.
            
            ---
            *This comment was automatically generated by the CI/CD pipeline.*`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

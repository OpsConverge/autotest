name: E2E Test Pipeline (Playwright + Cypress + Selenium)

on:
  workflow_dispatch:
    inputs:
      run_playwright:
        description: 'Run Playwright E2E tests'
        required: false
        default: true
        type: boolean
      run_cypress:
        description: 'Run Cypress E2E tests'
        required: false
        default: true
        type: boolean
      run_selenium:
        description: 'Run Selenium E2E tests'
        required: false
        default: true
        type: boolean
      target_url:
        description: 'Target URL for E2E tests'
        required: false
        default: 'http://localhost:5173'
        type: string

jobs:
  setup-environment:
    name: Setup Test Environment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Start application
        run: |
          npm run preview &
          sleep 10
          echo "Application started at http://localhost:4173"

      - name: Wait for application to be ready
        run: |
          for i in {1..30}; do
            if curl -f http://localhost:4173; then
              echo "Application is ready"
              break
            fi
            echo "Waiting for application... ($i/30)"
            sleep 2
          done

  e2e-tests-playwright:
    name: E2E Tests (Playwright)
    runs-on: ubuntu-latest
    needs: setup-environment
    if: ${{ github.event.inputs.run_playwright == 'true' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Run Playwright E2E tests
        run: npm run test:e2e:playwright
        env:
          TEST_TARGET_URL: ${{ github.event.inputs.target_url }}

      - name: Upload Playwright results
        uses: actions/upload-artifact@v3
        with:
          name: playwright-results
          path: ./playwright-report/

      - name: Upload test results
        uses: actions/upload-artifact@v3
        with:
          name: playwright-test-results
          path: ./coverage/playwright-results.json

  e2e-tests-cypress:
    name: E2E Tests (Cypress)
    runs-on: ubuntu-latest
    needs: setup-environment
    if: ${{ github.event.inputs.run_cypress == 'true' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run Cypress E2E tests
        run: npm run test:e2e:cypress
        env:
          CYPRESS_baseUrl: ${{ github.event.inputs.target_url }}

      - name: Upload Cypress results
        uses: actions/upload-artifact@v3
        with:
          name: cypress-results
          path: ./cypress/videos/
          if-no-files-found: ignore

      - name: Upload test results
        uses: actions/upload-artifact@v3
        with:
          name: cypress-test-results
          path: ./coverage/cypress-results.json

  e2e-tests-selenium:
    name: E2E Tests (Selenium)
    runs-on: ubuntu-latest
    needs: setup-environment
    if: ${{ github.event.inputs.run_selenium == 'true' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Chrome
        run: |
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable

      - name: Run Selenium E2E tests
        run: npm run test:e2e:selenium
        env:
          TEST_TARGET_URL: ${{ github.event.inputs.target_url }}

      - name: Upload test results
        uses: actions/upload-artifact@v3
        with:
          name: selenium-test-results
          path: ./coverage/selenium-results.json



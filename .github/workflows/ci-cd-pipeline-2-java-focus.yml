name: CI/CD Pipeline 2 - Java Focus

on:
  workflow_dispatch:
    inputs:
      run_unit_tests:
        description: 'Run Unit Tests (JUnit 5)'
        required: false
        default: true
        type: boolean
      run_integration_tests:
        description: 'Run Integration Tests (Spring Boot Test)'
        required: false
        default: true
        type: boolean
      run_api_tests:
        description: 'Run API Tests (REST Assured)'
        required: false
        default: true
        type: boolean
      run_e2e_tests:
        description: 'Run E2E Tests (Cypress)'
        required: false
        default: true
        type: boolean
      test_flakiness:
        description: 'Enable flakiness testing (random pass/fail)'
        required: false
        default: true
        type: boolean
      backend_url:
        description: 'Backend URL for tests'
        required: false
        default: 'http://localhost:4000'
        type: string

jobs:
  setup-backend:
    name: Setup Test Backend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install backend dependencies
        run: |
          cd backend
          npm ci

      - name: Start backend server
        run: |
          cd backend
          npm start &
          sleep 10
          echo "Backend started at http://localhost:4000"

      - name: Wait for backend to be ready
        run: |
          for i in {1..30}; do
            if curl -f http://localhost:4000/health; then
              echo "Backend is ready"
              break
            fi
            echo "Waiting for backend... ($i/30)"
            sleep 2
          done

  unit-tests-junit:
    name: Unit Tests (JUnit 5)
    runs-on: ubuntu-latest
    needs: setup-backend
    if: ${{ github.event.inputs.run_unit_tests == 'true' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Run JUnit unit tests
        run: |
          if [ "${{ github.event.inputs.test_flakiness }}" = "true" ]; then
            echo "Running JUnit tests with flakiness simulation..."
            npm run test:unit:junit:mock
          else
            echo "Running JUnit tests normally..."
            npm run test:unit:junit
          fi
        env:
          ENABLE_FLAKINESS: ${{ github.event.inputs.test_flakiness }}

      - name: Upload JUnit test results
        uses: actions/upload-artifact@v3
        with:
          name: junit-unit-results
          path: |
            ./target/surefire-reports/
            ./target/junit-results.xml

  integration-tests-springboot:
    name: Integration Tests (Spring Boot Test)
    runs-on: ubuntu-latest
    needs: setup-backend
    if: ${{ github.event.inputs.run_integration_tests == 'true' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Run Spring Boot integration tests
        run: |
          if [ "${{ github.event.inputs.test_flakiness }}" = "true" ]; then
            echo "Running Spring Boot tests with flakiness simulation..."
            npm run test:integration:springboot:mock
          else
            echo "Running Spring Boot tests normally..."
            npm run test:integration:springboot
          fi
        env:
          TEST_API_URL: ${{ github.event.inputs.backend_url }}
          ENABLE_FLAKINESS: ${{ github.event.inputs.test_flakiness }}

      - name: Upload Spring Boot test results
        uses: actions/upload-artifact@v3
        with:
          name: springboot-integration-results
          path: |
            ./target/surefire-reports/
            ./target/springboot-results.xml

  api-tests-restassured:
    name: API Tests (REST Assured)
    runs-on: ubuntu-latest
    needs: setup-backend
    if: ${{ github.event.inputs.run_api_tests == 'true' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Run REST Assured API tests
        run: |
          if [ "${{ github.event.inputs.test_flakiness }}" = "true" ]; then
            echo "Running REST Assured tests with flakiness simulation..."
            npm run test:api:restassured:mock
          else
            echo "Running REST Assured tests normally..."
            npm run test:api:restassured
          fi
        env:
          TEST_API_URL: ${{ github.event.inputs.backend_url }}
          ENABLE_FLAKINESS: ${{ github.event.inputs.test_flakiness }}

      - name: Upload REST Assured test results
        uses: actions/upload-artifact@v3
        with:
          name: restassured-api-results
          path: |
            ./target/surefire-reports/
            ./target/restassured-results.xml

  e2e-tests-cypress:
    name: E2E Tests (Cypress)
    runs-on: ubuntu-latest
    needs: setup-backend
    if: ${{ github.event.inputs.run_e2e_tests == 'true' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run Cypress E2E tests
        run: |
          if [ "${{ github.event.inputs.test_flakiness }}" = "true" ]; then
            echo "Running Cypress tests with flakiness simulation..."
            npm run test:e2e:cypress:mock
          else
            echo "Running Cypress tests normally..."
            npm run test:e2e:cypress
          fi
        env:
          TEST_API_URL: ${{ github.event.inputs.backend_url }}
          ENABLE_FLAKINESS: ${{ github.event.inputs.test_flakiness }}

      - name: Upload Cypress test results
        uses: actions/upload-artifact@v3
        with:
          name: cypress-e2e-results
          path: |
            ./cypress/videos/
            ./cypress/screenshots/
            ./coverage/cypress-results.json

  analyze-flakiness:
    name: Analyze Test Flakiness
    runs-on: ubuntu-latest
    needs: [unit-tests-junit, integration-tests-springboot, api-tests-restassured, e2e-tests-cypress]
    if: ${{ github.event.inputs.test_flakiness == 'true' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all test results
        uses: actions/download-artifact@v3
        with:
          path: ./test-results

      - name: Analyze flakiness patterns
        run: |
          echo "Analyzing test flakiness patterns..."
          node scripts/analyze-flakiness.js pipeline2
        env:
          TEST_RESULTS_PATH: ./test-results

      - name: Upload flakiness report
        uses: actions/upload-artifact@v3
        with:
          name: flakiness-analysis-pipeline2
          path: ./flakiness-report.json
